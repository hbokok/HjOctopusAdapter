// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sigmob_bid_response.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(WindGPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define WindGPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if WindGPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <WindFoundation/WindGPBProtocolBuffers.h>
#else
 #import "WindGPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class SigmobColor;
@class SigmobSize;
@class WindSDKAd;
@class WindSDKAdSetting;
@class WindSDKBiddingResponse;
@class WindSDKClickAreaSetting;
@class WindSDKCompanionEndcard;
@class WindSDKInterstitialSetting;
@class WindSDKMaterialMeta;
@class WindSDKNativeAdSetting;
@class WindSDKResponseAsset;
@class WindSDKResponseAssetImage;
@class WindSDKResponseAssetText;
@class WindSDKResponseAssetVideo;
@class WindSDKResponseNativeAd;
@class WindSDKRvAdSetting;
@class WindSDKSKAdNetwork;
@class WindSDKSingleNativeAdSetting;
@class WindSDKSlotAdSetting;
@class WindSDKSplashAdSetting;
@class WindSDKTemplate;
@class WindSDKTracking;
@class WindSDKWXProgramRes;
@class WindSDKWidget;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - WindSDKSigmobBidResponseRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (WindGPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c WindGPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
WindGPB_FINAL @interface WindSDKSigmobBidResponseRoot : WindGPBRootObject
@end

#pragma mark - WindSDKBidResponse

typedef WindGPB_ENUM(WindSDKBidResponse_FieldNumber) {
  WindSDKBidResponse_FieldNumber_RequestId = 1,
  WindSDKBidResponse_FieldNumber_AdsArray = 2,
  WindSDKBidResponse_FieldNumber_ErrorCode = 3,
  WindSDKBidResponse_FieldNumber_ProcessTimeMsDsp = 4,
  WindSDKBidResponse_FieldNumber_ProcessTimeMsSsp = 5,
  WindSDKBidResponse_FieldNumber_PctrValidCheck = 6,
  WindSDKBidResponse_FieldNumber_PctrVersion = 7,
  WindSDKBidResponse_FieldNumber_Uid = 8,
  WindSDKBidResponse_FieldNumber_ExpirationTime = 9,
  WindSDKBidResponse_FieldNumber_AdUa = 10,
  WindSDKBidResponse_FieldNumber_SlotAdSetting = 11,
  WindSDKBidResponse_FieldNumber_ErrorMessage = 12,
  WindSDKBidResponse_FieldNumber_Scene = 13,
  WindSDKBidResponse_FieldNumber_BiddingResponse = 14,
  WindSDKBidResponse_FieldNumber_RvCallbackURL = 15,
};

/**
 * 内部广告返回
 **/
WindGPB_FINAL @interface WindSDKBidResponse : WindGPBMessage

/** 对应请的request_id(内部生成的) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *requestId;

/** 广告信息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<WindSDKAd*> *adsArray;
/** The number of items in @c adsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger adsArray_Count;

/** 请求出错时的错误码，用于问题排查 */
@property(nonatomic, readwrite) uint64_t errorCode;

/** 投放系统广告检索时长，ms */
@property(nonatomic, readwrite) uint64_t processTimeMsDsp;

/** ssp聚合平台广告检索时长，ms */
@property(nonatomic, readwrite) uint64_t processTimeMsSsp;

/** 预估人群是否有效. 0：未查到预估数据；1：使用；2：过期；3：未过期，但无交集【v2.5.2版本开始只有0:未使用预估，4:在线预估】 */
@property(nonatomic, readwrite) uint32_t pctrValidCheck;

/** 预估版本【v2.5.2开始弃用】 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pctrVersion;

/** 用户在sigmob的唯一标识。 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *uid;

/** 广告有效截止日期。Unix时间戳，单位秒。 */
@property(nonatomic, readwrite) uint32_t expirationTime;

/** 广告使用ua，优先从pb中取，当pb中ua为空时从请求header中取user-agent */
@property(nonatomic, readwrite, copy, null_resettable) NSString *adUa;

/** 广告位上广告相关设置，对返回所有广告生效（sdk 3.4.0开始生效） */
@property(nonatomic, readwrite, strong, null_resettable) WindSDKSlotAdSetting *slotAdSetting;
/** Test to see if @c slotAdSetting has been set. */
@property(nonatomic, readwrite) BOOL hasSlotAdSetting;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

/** 当前的主入口，若主入口为空，直接使用ads[0].materials[0].main_template */
@property(nonatomic, readwrite, strong, null_resettable) WindSDKTemplate *scene;
/** Test to see if @c scene has been set. */
@property(nonatomic, readwrite) BOOL hasScene;

/** c-s 返回的出价以及url */
@property(nonatomic, readwrite, strong, null_resettable) WindSDKBiddingResponse *biddingResponse;
/** Test to see if @c biddingResponse has been set. */
@property(nonatomic, readwrite) BOOL hasBiddingResponse;

/** 激励回调track url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *rvCallbackURL;

@end

#pragma mark - WindSDKAd

typedef WindGPB_ENUM(WindSDKAd_FieldNumber) {
  WindSDKAd_FieldNumber_AdslotId = 1,
  WindSDKAd_FieldNumber_Vid = 2,
  WindSDKAd_FieldNumber_CustId = 3,
  WindSDKAd_FieldNumber_CampId = 4,
  WindSDKAd_FieldNumber_Crid = 5,
  WindSDKAd_FieldNumber_MaterialsArray = 6,
  WindSDKAd_FieldNumber_AdTrackingArray = 7,
  WindSDKAd_FieldNumber_BidPrice = 8,
  WindSDKAd_FieldNumber_ProductId = 9,
  WindSDKAd_FieldNumber_SettlementPriceEnc = 10,
  WindSDKAd_FieldNumber_IsOverride = 11,
  WindSDKAd_FieldNumber_AdSourceLogo = 12,
  WindSDKAd_FieldNumber_AdSourceChannel = 13,
  WindSDKAd_FieldNumber_AdType = 14,
  WindSDKAd_FieldNumber_Options = 15,
  WindSDKAd_FieldNumber_ExpiredTime = 16,
  WindSDKAd_FieldNumber_ForbidenParseLandingpage = 17,
  WindSDKAd_FieldNumber_DisplayOrientation = 18,
  WindSDKAd_FieldNumber_AdSetting = 19,
  WindSDKAd_FieldNumber_BidType = 20,
  WindSDKAd_FieldNumber_AttributionId = 21,
  WindSDKAd_FieldNumber_SkAdNetwork = 22,
  WindSDKAd_FieldNumber_ViewThroughAdNetwork = 23,
  WindSDKAd_FieldNumber_AdTrackMacro = 24,
  WindSDKAd_FieldNumber_WxProgramRes = 27,
};

/**
 * 广告信息
 **/
WindGPB_FINAL @interface WindSDKAd : WindGPBMessage

/** 对应请求时填写的广告位ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *adslotId;

/** 广告曝光id. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *vid;

/** 客户ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *custId;

/** 推广计划ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *campId;

/** 创意ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *crid;

/** 物料元数据组(素材)，目前只有一个 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<WindSDKMaterialMeta*> *materialsArray;
/** The number of items in @c materialsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger materialsArray_Count;

/** 广告监控信息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<WindSDKTracking*> *adTrackingArray;
/** The number of items in @c adTrackingArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger adTrackingArray_Count;

/** 最高竞价，单位cpm分 */
@property(nonatomic, readwrite) uint32_t bidPrice;

/** 下载类广告时，为product在app store的id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *productId;

/** 媒体和投放平台的结算价格密文 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *settlementPriceEnc;

/** 0:没有；1：有 */
@property(nonatomic, readwrite) uint32_t isOverride;

/** 广告来源方的logo小图标地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *adSourceLogo;

/** 广告来源编码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *adSourceChannel;

/** 广告类型：1=奖励视频广告, 2=开屏 */
@property(nonatomic, readwrite) uint32_t adType;

/** 保留扩展字段 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *options;
/** The number of items in @c options without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger options_Count;

/** 广告过期时间 单位为秒 */
@property(nonatomic, readwrite) uint32_t expiredTime;

/** 禁止解析落地页 */
@property(nonatomic, readwrite) BOOL forbidenParseLandingpage;

/** 广告播放方向：0 自动 默认， 1.竖屏，2.横屏，3. 横竖屏 */
@property(nonatomic, readwrite) uint32_t displayOrientation;

/** 广告设置；sdk 3.4.0版本开始为独立广告设置； */
@property(nonatomic, readwrite, strong, null_resettable) WindSDKAdSetting *adSetting;
/** Test to see if @c adSetting has been set. */
@property(nonatomic, readwrite) BOOL hasAdSetting;

/** 投放平台的竞价类型: 1 cpm, 2 cpc, 3 cpa */
@property(nonatomic, readwrite) uint32_t bidType;

/** 广告的归因id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *attributionId;

/** SKAdNetwork所需要的信息 */
@property(nonatomic, readwrite, strong, null_resettable) WindSDKSKAdNetwork *skAdNetwork;
/** Test to see if @c skAdNetwork has been set. */
@property(nonatomic, readwrite) BOOL hasSkAdNetwork;

/** SKAdNetwork所需要的信息,针对View-Through Ad */
@property(nonatomic, readwrite, strong, null_resettable) WindSDKSKAdNetwork *viewThroughAdNetwork;
/** Test to see if @c viewThroughAdNetwork has been set. */
@property(nonatomic, readwrite) BOOL hasViewThroughAdNetwork;

/** 广告新监测链接宏 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *adTrackMacro;
/** The number of items in @c adTrackMacro without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger adTrackMacro_Count;

@property(nonatomic, readwrite, strong, null_resettable) WindSDKWXProgramRes *wxProgramRes;
/** Test to see if @c wxProgramRes has been set. */
@property(nonatomic, readwrite) BOOL hasWxProgramRes;

@end

#pragma mark - WindSDKMaterialMeta

typedef WindGPB_ENUM(WindSDKMaterialMeta_FieldNumber) {
  WindSDKMaterialMeta_FieldNumber_CreativeType = 1,
  WindSDKMaterialMeta_FieldNumber_InteractionType = 2,
  WindSDKMaterialMeta_FieldNumber_LandingPage = 3,
  WindSDKMaterialMeta_FieldNumber_VideoURL = 4,
  WindSDKMaterialMeta_FieldNumber_VideoDuration = 5,
  WindSDKMaterialMeta_FieldNumber_VideoSize = 6,
  WindSDKMaterialMeta_FieldNumber_HtmlSnippet = 7,
  WindSDKMaterialMeta_FieldNumber_EndcardURL = 8,
  WindSDKMaterialMeta_FieldNumber_VideoMd5 = 9,
  WindSDKMaterialMeta_FieldNumber_EndcardMd5 = 10,
  WindSDKMaterialMeta_FieldNumber_DeeplinkURL = 11,
  WindSDKMaterialMeta_FieldNumber_ImageSrc = 12,
  WindSDKMaterialMeta_FieldNumber_ImageSize = 13,
  WindSDKMaterialMeta_FieldNumber_ImageMd5 = 14,
  WindSDKMaterialMeta_FieldNumber_ImageType = 15,
  WindSDKMaterialMeta_FieldNumber_ClickType = 16,
  WindSDKMaterialMeta_FieldNumber_HasCompanionEndcard = 17,
  WindSDKMaterialMeta_FieldNumber_Companion = 18,
  WindSDKMaterialMeta_FieldNumber_TemplateType = 20,
  WindSDKMaterialMeta_FieldNumber_VideoReciprocalMillisecond = 21,
  WindSDKMaterialMeta_FieldNumber_HtmlURL = 22,
  WindSDKMaterialMeta_FieldNumber_EnableCollapseToolBar = 23,
  WindSDKMaterialMeta_FieldNumber_OpenMarketMode = 24,
  WindSDKMaterialMeta_FieldNumber_PlayMode = 25,
  WindSDKMaterialMeta_FieldNumber_SubInteractionType = 26,
  WindSDKMaterialMeta_FieldNumber_Title = 27,
  WindSDKMaterialMeta_FieldNumber_Desc = 28,
  WindSDKMaterialMeta_FieldNumber_IconURL = 29,
  WindSDKMaterialMeta_FieldNumber_Score = 30,
  WindSDKMaterialMeta_FieldNumber_TemplateId = 31,
  WindSDKMaterialMeta_FieldNumber_DisableAutoDeeplink = 32,
  WindSDKMaterialMeta_FieldNumber_ClosecardHtmlSnippet = 33,
  WindSDKMaterialMeta_FieldNumber_AppName = 34,
  WindSDKMaterialMeta_FieldNumber_ButtonText = 35,
  WindSDKMaterialMeta_FieldNumber_VideoByteSize = 37,
  WindSDKMaterialMeta_FieldNumber_HtmlSrc = 38,
  WindSDKMaterialMeta_FieldNumber_NativeAd = 39,
  WindSDKMaterialMeta_FieldNumber_MainTemplate = 42,
  WindSDKMaterialMeta_FieldNumber_SubTemplate = 43,
  WindSDKMaterialMeta_FieldNumber_AssetArray = 44,
  WindSDKMaterialMeta_FieldNumber_ThemeData = 45,
  WindSDKMaterialMeta_FieldNumber_EndcardImageSrc = 47,
  WindSDKMaterialMeta_FieldNumber_CreativeTitle = 48,
  WindSDKMaterialMeta_FieldNumber_HasEndcard = 49,
  WindSDKMaterialMeta_FieldNumber_ButtonColor = 50,
  WindSDKMaterialMeta_FieldNumber_WidgetListArray = 51,
};

/**
 * 广告物料元数据信息
 **/
WindGPB_FINAL @interface WindSDKMaterialMeta : WindGPBMessage

/** 创意类型：1=奖励视频广告的资源包形式(endcard为tgz包)，一般由video、endcard资源包构成；3=纯静态图片广告，一般由单张image_src构成;4=video+html源代码的模式;5=预留;6=video定帧+htmlsrc;7=video+landingpage(相当于在线endcard)；8单个视频；9 MRAID；10 MRAID2.0 */
@property(nonatomic, readwrite) uint32_t creativeType;

/** 广告交互类型。1=使用浏览器打开；2=下载应用;3=deeplink唤醒失败，执行下载 */
@property(nonatomic, readwrite) uint32_t interactionType;

/** 广告目标地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *landingPage;

/** 视频物料地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *videoURL;

/** 视频物料时长 */
@property(nonatomic, readwrite) uint32_t videoDuration;

/** 视频尺寸 */
@property(nonatomic, readwrite, strong, null_resettable) SigmobSize *videoSize;
/** Test to see if @c videoSize has been set. */
@property(nonatomic, readwrite) BOOL hasVideoSize;

/** HTML片段，中文需要UTF-8编码. 激励视频广告时,存放Endcard的H5代码. */
@property(nonatomic, readwrite, copy, null_resettable) NSData *htmlSnippet;

/** Endcard地址，sigmob为资源包的方式 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *endcardURL;

/** 视频的md5 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *videoMd5;

/** Endcard的md5 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *endcardMd5;

/** deeplink url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deeplinkURL;

/** 广告图片地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *imageSrc;

/** 广告图片尺寸 */
@property(nonatomic, readwrite, strong, null_resettable) SigmobSize *imageSize;
/** Test to see if @c imageSize has been set. */
@property(nonatomic, readwrite) BOOL hasImageSize;

/** 图片的md5值 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *imageMd5;

/** 图片素材的格式编码，0:unknown 1:jpeg,jpg 2:png 3:gif */
@property(nonatomic, readwrite) uint32_t imageType;

/** 点击类型，1=按钮点击，2=全屏点击 */
@property(nonatomic, readwrite) uint32_t clickType;

/** 是否包含伴随广告的素材 */
@property(nonatomic, readwrite) BOOL hasCompanionEndcard;

/** 伴随广告的素材对象 */
@property(nonatomic, readwrite, strong, null_resettable) WindSDKCompanionEndcard *companion;
/** Test to see if @c companion has been set. */
@property(nonatomic, readwrite) BOOL hasCompanion;

/** 开屏:{1:跳过+广告合一+logo模版,2:跳过+广告模版}, 激励视频:{1:星级模版,2:描述模版} */
@property(nonatomic, readwrite) uint32_t templateType;

/** 视频播放结束后，停留的倒数（99999999:首帧；-99999999:尾帧；正数：正数第几毫秒；负数：倒数第几毫秒；0:取默认值） */
@property(nonatomic, readwrite) int32_t videoReciprocalMillisecond;

/** html素材地址(表单类投放可使用html_url+按钮点击+landing_page为空) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *htmlURL;

/** 是否允许收起\\展开工具条（通过单击视频)，false不允许，true允许 */
@property(nonatomic, readwrite) BOOL enableCollapseToolBar;

/** 打开应用市场的模式， 0:appstore半屏打开，1:全屏打开（目前仅ios使用） */
@property(nonatomic, readwrite) uint32_t openMarketMode;

/** 播放模式，0:预加载模式，1:在线流媒体播放模式 */
@property(nonatomic, readwrite) uint32_t playMode;

/** 子交互类型，0:无效, 1:广点通下载类型 */
@property(nonatomic, readwrite) uint32_t subInteractionType;

/** 广告标题(ssp v3.4.0开始加入) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** 广告描述(ssp v3.4.0开始加入) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *desc;

/** 广告icon图片(ssp v3.4.0开始加入，未来CompanionEndcard中字段将废弃) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *iconURL;

/** 下载类app的星级，小数，例如4.5表示4星半（目前用在伴随广告），score大于等于1才有效(ssp v3.4.0开始加入，未来CompanionEndcard中字段将废弃) */
@property(nonatomic, readwrite) float score;

/** 模板id */
@property(nonatomic, readwrite) uint32_t templateId;

/** 是否禁止deeplink自动唤起 */
@property(nonatomic, readwrite) BOOL disableAutoDeeplink;

/** 关闭页推荐HTML片段 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *closecardHtmlSnippet;

/** 广告应用名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *appName;

/** 广告按钮文案 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *buttonText;

/** 视频大小，单位：字节 */
@property(nonatomic, readwrite) uint32_t videoByteSize;

/** html代码片段 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *htmlSrc;

/** 原生广告 */
@property(nonatomic, readwrite, strong, null_resettable) WindSDKResponseNativeAd *nativeAd;
/** Test to see if @c nativeAd has been set. */
@property(nonatomic, readwrite) BOOL hasNativeAd;

/** 当前广告的主模版 */
@property(nonatomic, readwrite, strong, null_resettable) WindSDKTemplate *mainTemplate;
/** Test to see if @c mainTemplate has been set. */
@property(nonatomic, readwrite) BOOL hasMainTemplate;

/** 当前广告的字模版 */
@property(nonatomic, readwrite, strong, null_resettable) WindSDKTemplate *subTemplate;
/** Test to see if @c subTemplate has been set. */
@property(nonatomic, readwrite) BOOL hasSubTemplate;

/** 素材资源 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<WindSDKResponseAsset*> *assetArray;
/** The number of items in @c assetArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger assetArray_Count;

/** 0: 主题非半透明；1: 主题半透明 */
@property(nonatomic, readwrite) uint32_t themeData;

/** endcard图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *endcardImageSrc;

/** 创意标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *creativeTitle;

/** 创意是否有endcard */
@property(nonatomic, readwrite) BOOL hasEndcard;

/** 按钮颜色 */
@property(nonatomic, readwrite, strong, null_resettable) SigmobColor *buttonColor;
/** Test to see if @c buttonColor has been set. */
@property(nonatomic, readwrite) BOOL hasButtonColor;

/** 挂件列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<WindSDKWidget*> *widgetListArray;
/** The number of items in @c widgetListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger widgetListArray_Count;

@end

#pragma mark - WindSDKWidget

typedef WindGPB_ENUM(WindSDKWidget_FieldNumber) {
  WindSDKWidget_FieldNumber_WidgetId = 1,
};

WindGPB_FINAL @interface WindSDKWidget : WindGPBMessage

/** 挂件id */
@property(nonatomic, readwrite) uint64_t widgetId;

@end

#pragma mark - WindSDKCompanionEndcard

typedef WindGPB_ENUM(WindSDKCompanionEndcard_FieldNumber) {
  WindSDKCompanionEndcard_FieldNumber_IconURL = 1,
  WindSDKCompanionEndcard_FieldNumber_Title = 2,
  WindSDKCompanionEndcard_FieldNumber_Score = 3,
  WindSDKCompanionEndcard_FieldNumber_ButtonText = 4,
  WindSDKCompanionEndcard_FieldNumber_ButtonColor = 5,
  WindSDKCompanionEndcard_FieldNumber_ButtonTextColor = 6,
  WindSDKCompanionEndcard_FieldNumber_ClickType = 7,
  WindSDKCompanionEndcard_FieldNumber_BarColor = 8,
  WindSDKCompanionEndcard_FieldNumber_Desc = 9,
  WindSDKCompanionEndcard_FieldNumber_AnimateType = 10,
  WindSDKCompanionEndcard_FieldNumber_ShowDelaySecs = 11,
};

WindGPB_FINAL @interface WindSDKCompanionEndcard : WindGPBMessage

/** 下载类app的icon（目前用在伴随广告） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *iconURL;

/** 广告标题（目前用在伴随广告，即将废弃。移入ad中） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** 下载类app的星际，小数，例如4.5表示4星半（目前用在伴随广告），score大于等于1才有效 */
@property(nonatomic, readwrite) float score;

/** 伴随广告的button的文字（目前用在伴随广告） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *buttonText;

/** 按钮颜色（目前用在伴随广告）,color对象 */
@property(nonatomic, readwrite, strong, null_resettable) SigmobColor *buttonColor;
/** Test to see if @c buttonColor has been set. */
@property(nonatomic, readwrite) BOOL hasButtonColor;

/** 按钮字体的颜色（目前用在伴随广告）,color对象 */
@property(nonatomic, readwrite, strong, null_resettable) SigmobColor *buttonTextColor;
/** Test to see if @c buttonTextColor has been set. */
@property(nonatomic, readwrite) BOOL hasButtonTextColor;

/** 点击类型，1=按钮点击，2=伴随条点击 */
@property(nonatomic, readwrite) uint32_t clickType;

/** 伴随条的颜色,color对象 */
@property(nonatomic, readwrite, strong, null_resettable) SigmobColor *barColor;
/** Test to see if @c barColor has been set. */
@property(nonatomic, readwrite) BOOL hasBarColor;

/** 应用描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *desc;

/** 动画类型,1：中心缩放+弹簧；2：自下而上;3:无动画； */
@property(nonatomic, readwrite) uint32_t animateType;

/** 伴随条延迟出现的秒数 */
@property(nonatomic, readwrite) uint32_t showDelaySecs;

@end

#pragma mark - WindSDKTracking

typedef WindGPB_ENUM(WindSDKTracking_FieldNumber) {
  WindSDKTracking_FieldNumber_TrackingEventType = 1,
  WindSDKTracking_FieldNumber_TrackingURLArray = 2,
};

/**
 * 广告效果跟踪信息
 **/
WindGPB_FINAL @interface WindSDKTracking : WindGPBMessage

/** track事件类型。事件类型见字典 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *trackingEventType;

/** track事件URL */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *trackingURLArray;
/** The number of items in @c trackingURLArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger trackingURLArray_Count;

@end

#pragma mark - WindSDKAdSetting

typedef WindGPB_ENUM(WindSDKAdSetting_FieldNumber) {
  WindSDKAdSetting_FieldNumber_RvSetting = 1,
  WindSDKAdSetting_FieldNumber_SplashSetting = 2,
  WindSDKAdSetting_FieldNumber_RetryCount = 3,
  WindSDKAdSetting_FieldNumber_SingleNativeSetting = 4,
  WindSDKAdSetting_FieldNumber_InApp = 5,
  WindSDKAdSetting_FieldNumber_UseSafari = 6,
  WindSDKAdSetting_FieldNumber_SchemeWhiteListArray = 8,
  WindSDKAdSetting_FieldNumber_Sensitivity = 9,
};

WindGPB_FINAL @interface WindSDKAdSetting : WindGPBMessage

/** 激励视频相关广告设置 */
@property(nonatomic, readwrite, strong, null_resettable) WindSDKRvAdSetting *rvSetting;
/** Test to see if @c rvSetting has been set. */
@property(nonatomic, readwrite) BOOL hasRvSetting;

/** 开屏广告相关配置 */
@property(nonatomic, readwrite, strong, null_resettable) WindSDKSplashAdSetting *splashSetting;
/** Test to see if @c splashSetting has been set. */
@property(nonatomic, readwrite) BOOL hasSplashSetting;

/** 重试次数（0:不重试） */
@property(nonatomic, readwrite) int32_t retryCount;

/** 原生广告相关设置 */
@property(nonatomic, readwrite, strong, null_resettable) WindSDKSingleNativeAdSetting *singleNativeSetting;
/** Test to see if @c singleNativeSetting has been set. */
@property(nonatomic, readwrite) BOOL hasSingleNativeSetting;

/** 是否在应用内打开landing_page */
@property(nonatomic, readwrite) BOOL inApp;

/** 在应用内打开是否使用safari，默认使用WKWebView */
@property(nonatomic, readwrite) BOOL useSafari;

/** 允许模版跳转的白名单（各app的协议头），*表示通配符 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *schemeWhiteListArray;
/** The number of items in @c schemeWhiteListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger schemeWhiteListArray_Count;

/** 互动灵敏度，1-低，2-中，3-高 */
@property(nonatomic, readwrite) uint32_t sensitivity;

@end

#pragma mark - WindSDKSlotAdSetting

typedef WindGPB_ENUM(WindSDKSlotAdSetting_FieldNumber) {
  WindSDKSlotAdSetting_FieldNumber_RvSetting = 1,
  WindSDKSlotAdSetting_FieldNumber_SplashSetting = 2,
  WindSDKSlotAdSetting_FieldNumber_NativeSetting = 3,
  WindSDKSlotAdSetting_FieldNumber_RetryCount = 4,
  WindSDKSlotAdSetting_FieldNumber_InterstitialSetting = 6,
};

WindGPB_FINAL @interface WindSDKSlotAdSetting : WindGPBMessage

/** 激励视频相关广告设置 */
@property(nonatomic, readwrite, strong, null_resettable) WindSDKRvAdSetting *rvSetting;
/** Test to see if @c rvSetting has been set. */
@property(nonatomic, readwrite) BOOL hasRvSetting;

/** 开屏广告相关配置 */
@property(nonatomic, readwrite, strong, null_resettable) WindSDKSplashAdSetting *splashSetting;
/** Test to see if @c splashSetting has been set. */
@property(nonatomic, readwrite) BOOL hasSplashSetting;

/** 原生广告相关设置 */
@property(nonatomic, readwrite, strong, null_resettable) WindSDKNativeAdSetting *nativeSetting;
/** Test to see if @c nativeSetting has been set. */
@property(nonatomic, readwrite) BOOL hasNativeSetting;

/** 重试次数（0:不重试） */
@property(nonatomic, readwrite) int32_t retryCount;

/** 新插屏的相关配置 */
@property(nonatomic, readwrite, strong, null_resettable) WindSDKInterstitialSetting *interstitialSetting;
/** Test to see if @c interstitialSetting has been set. */
@property(nonatomic, readwrite) BOOL hasInterstitialSetting;

@end

#pragma mark - WindSDKRvAdSetting

typedef WindGPB_ENUM(WindSDKRvAdSetting_FieldNumber) {
  WindSDKRvAdSetting_FieldNumber_IfMute = 1,
  WindSDKRvAdSetting_FieldNumber_Finished = 2,
  WindSDKRvAdSetting_FieldNumber_VideoClosePosition = 3,
  WindSDKRvAdSetting_FieldNumber_EndcardClosePosition = 4,
  WindSDKRvAdSetting_FieldNumber_MutePostion = 5,
  WindSDKRvAdSetting_FieldNumber_SkipPercent = 6,
  WindSDKRvAdSetting_FieldNumber_SkipSeconds = 7,
  WindSDKRvAdSetting_FieldNumber_EnableExitOnVideoClose = 8,
  WindSDKRvAdSetting_FieldNumber_FullClickOnVideo = 9,
  WindSDKRvAdSetting_FieldNumber_ClickSetting = 10,
  WindSDKRvAdSetting_FieldNumber_InvisibleAdLabel = 11,
  WindSDKRvAdSetting_FieldNumber_EndTime = 12,
  WindSDKRvAdSetting_FieldNumber_EndcardCloseImage = 13,
  WindSDKRvAdSetting_FieldNumber_EndImpressionTime = 14,
  WindSDKRvAdSetting_FieldNumber_DisableAutoLoad = 15,
};

WindGPB_FINAL @interface WindSDKRvAdSetting : WindGPBMessage

/** 是否静音，负值表示未设置，由sdk决定，0、有声音，1、静音 */
@property(nonatomic, readwrite) int32_t ifMute;

/** 播放完成比例定义，从0到1的小数 */
@property(nonatomic, readwrite) float finished;

/** 视频关闭按钮位置，左上：1，右上：3 */
@property(nonatomic, readwrite) int32_t videoClosePosition;

/** endcard关闭按钮位置，左上：1，左下：2，右上：3，右下：4， */
@property(nonatomic, readwrite) int32_t endcardClosePosition;

/** 静音按钮位置， 左上：1，左下：2，右上：3，右下：4， */
@property(nonatomic, readwrite) int32_t mutePostion;

/** 跳过按钮，根据视频播放进度的百分比显示，取值范围[0,100]，取0表示一开始就可条，取30，表示播放到30%时显示跳过按钮 */
@property(nonatomic, readwrite) int32_t skipPercent;

/** 小于零表示此项不生效，大于等于零表示经过的指定的秒数后显示跳过按钮，如果次项配置大于等于零，则skipPercent配置项自动失效 */
@property(nonatomic, readwrite) int32_t skipSeconds;

/** 是否允许关闭视频时直接退出广告，而不再显示endcard */
@property(nonatomic, readwrite) BOOL enableExitOnVideoClose;

/** 视频全屏点击开关 */
@property(nonatomic, readwrite) BOOL fullClickOnVideo;

/** 点击区域配置 */
@property(nonatomic, readwrite, strong, null_resettable) WindSDKClickAreaSetting *clickSetting;
/** Test to see if @c clickSetting has been set. */
@property(nonatomic, readwrite) BOOL hasClickSetting;

/** 是否不显示广告字样 */
@property(nonatomic, readwrite) BOOL invisibleAdLabel;

/** 视频播放结束时间（t>0） */
@property(nonatomic, readwrite) int32_t endTime;

/** endcard close按钮图片配置：0: 使用老图片；1: 使用新图片 default = 0 */
@property(nonatomic, readwrite) int32_t endcardCloseImage;

/** 针对view-through-ad */
@property(nonatomic, readwrite) int32_t endImpressionTime;

/** 关闭广告播放中的自动加载逻辑 */
@property(nonatomic, readwrite) BOOL disableAutoLoad;

@end

#pragma mark - WindSDKInterstitialSetting

typedef WindGPB_ENUM(WindSDKInterstitialSetting_FieldNumber) {
  WindSDKInterstitialSetting_FieldNumber_IfMute = 1,
  WindSDKInterstitialSetting_FieldNumber_ShowSkipSeconds = 2,
  WindSDKInterstitialSetting_FieldNumber_SkipCloseAd = 3,
  WindSDKInterstitialSetting_FieldNumber_SkipPosition = 4,
  WindSDKInterstitialSetting_FieldNumber_EndcardClosePosition = 5,
  WindSDKInterstitialSetting_FieldNumber_MutePosition = 6,
  WindSDKInterstitialSetting_FieldNumber_ShakeLevel = 7,
  WindSDKInterstitialSetting_FieldNumber_ChargeTime = 8,
  WindSDKInterstitialSetting_FieldNumber_DisableAutoLoad = 9,
};

WindGPB_FINAL @interface WindSDKInterstitialSetting : WindGPBMessage

/** 广告是否静音（0:非静音、1:静音。default=0） */
@property(nonatomic, readwrite) uint32_t ifMute;

/** 倒计时/跳过按钮 倒计时出现时间输入值，默认是0 s */
@property(nonatomic, readwrite) uint32_t showSkipSeconds;

/** 点击跳过时，是否直接关闭广告（默认false） */
@property(nonatomic, readwrite) BOOL skipCloseAd;

/** 跳过按钮+同页面的关闭按钮位置，左上：1，左下：2，右上（默认）：3，右下：4 */
@property(nonatomic, readwrite) uint32_t skipPosition;

/** endcard关闭按钮位置，左上：1, 左下：2，右上（默认）：3，右下：4， */
@property(nonatomic, readwrite) uint32_t endcardClosePosition;

/** 静音按钮位置， 左上：1(默认），左下：2，右上：3，右下：4， */
@property(nonatomic, readwrite) uint32_t mutePosition;

/** 用户摇一摇的力度 2:低 1:中 0:高 （默认值） */
@property(nonatomic, readwrite) uint32_t shakeLevel;

/** 视频素材的结算点的打点时间 默认 5s，取值范围[0,30] */
@property(nonatomic, readwrite) uint32_t chargeTime;

/** 关闭广告播放中的自动加载逻辑 */
@property(nonatomic, readwrite) BOOL disableAutoLoad;

@end

#pragma mark - WindSDKSplashAdSetting

typedef WindGPB_ENUM(WindSDKSplashAdSetting_FieldNumber) {
  WindSDKSplashAdSetting_FieldNumber_ShowDuration = 1,
  WindSDKSplashAdSetting_FieldNumber_EnableCloseOnClick = 2,
  WindSDKSplashAdSetting_FieldNumber_EnableFullClick = 5,
  WindSDKSplashAdSetting_FieldNumber_InvisibleAdLabel = 6,
  WindSDKSplashAdSetting_FieldNumber_UseFloatingBtn = 7,
};

WindGPB_FINAL @interface WindSDKSplashAdSetting : WindGPBMessage

/** 开屏倒计时时间,负值表示为定义，由sdk默认值决定（目前默认值是3） */
@property(nonatomic, readwrite) int32_t showDuration;

/** 开屏点击关闭开关，（false 关闭，true 不关闭，默认值 false) */
@property(nonatomic, readwrite) BOOL enableCloseOnClick;

/** 是否开启全屏点击，default=false */
@property(nonatomic, readwrite) BOOL enableFullClick;

/** 是否不显示广告字样 */
@property(nonatomic, readwrite) BOOL invisibleAdLabel;

/** 模版是否使用浮窗按钮（除摇一摇模版外） */
@property(nonatomic, readwrite) BOOL useFloatingBtn;

@end

#pragma mark - WindSDKNativeAdSetting

typedef WindGPB_ENUM(WindSDKNativeAdSetting_FieldNumber) {
  WindSDKNativeAdSetting_FieldNumber_VideoAutoPlay = 1,
  WindSDKNativeAdSetting_FieldNumber_PreviewPageVideoMute = 2,
  WindSDKNativeAdSetting_FieldNumber_DetailPageVideoMute = 3,
  WindSDKNativeAdSetting_FieldNumber_ImpressionPercent = 4,
  WindSDKNativeAdSetting_FieldNumber_ImpressionTime = 5,
  WindSDKNativeAdSetting_FieldNumber_EndImpressionTime = 6,
};

/**
 * 广告位原生广告配置
 **/
WindGPB_FINAL @interface WindSDKNativeAdSetting : WindGPBMessage

/** 播放器自动控制：0-总是；1-wifi；2-不自动 */
@property(nonatomic, readwrite) uint32_t videoAutoPlay;

/** 预览页播放器静音控制：0-静音；1-不静音 */
@property(nonatomic, readwrite) uint32_t previewPageVideoMute;

/** 详情页播放器静音控制：0-不静音；1-静音 */
@property(nonatomic, readwrite) uint32_t detailPageVideoMute;

/** 广告有效曝光定义-曝光像素百分比 */
@property(nonatomic, readwrite) uint32_t impressionPercent;

/** 广告有效曝光定义-曝光持续时间 */
@property(nonatomic, readwrite) uint32_t impressionTime;

/** 针对view-through-ad */
@property(nonatomic, readwrite) int32_t endImpressionTime;

@end

#pragma mark - WindSDKSingleNativeAdSetting

typedef WindGPB_ENUM(WindSDKSingleNativeAdSetting_FieldNumber) {
  WindSDKSingleNativeAdSetting_FieldNumber_UseNaVideoComponent = 1,
};

/**
 * 单个原生广告配置
 **/
WindGPB_FINAL @interface WindSDKSingleNativeAdSetting : WindGPBMessage

/** 详情页是否使用NA视频组件 */
@property(nonatomic, readwrite) BOOL useNaVideoComponent;

@end

#pragma mark - WindSDKClickAreaSetting

typedef WindGPB_ENUM(WindSDKClickAreaSetting_FieldNumber) {
  WindSDKClickAreaSetting_FieldNumber_Top = 1,
  WindSDKClickAreaSetting_FieldNumber_Left = 2,
  WindSDKClickAreaSetting_FieldNumber_Bottom = 3,
  WindSDKClickAreaSetting_FieldNumber_Right = 4,
};

WindGPB_FINAL @interface WindSDKClickAreaSetting : WindGPBMessage

/** 上边距百分比[0, 1) */
@property(nonatomic, readwrite) float top;

/** 左边距百分比[0, 1) */
@property(nonatomic, readwrite) float left;

/** 下边距百分比[0, 1) */
@property(nonatomic, readwrite) float bottom;

/** 右边距百分比[0, 1) */
@property(nonatomic, readwrite) float right;

@end

#pragma mark - WindSDKSKAdNetwork

typedef WindGPB_ENUM(WindSDKSKAdNetwork_FieldNumber) {
  WindSDKSKAdNetwork_FieldNumber_Version = 1,
  WindSDKSKAdNetwork_FieldNumber_AdNetworkId = 2,
  WindSDKSKAdNetwork_FieldNumber_CampaignId = 3,
  WindSDKSKAdNetwork_FieldNumber_ItunesId = 4,
  WindSDKSKAdNetwork_FieldNumber_SourceAppId = 5,
  WindSDKSKAdNetwork_FieldNumber_Nonce = 6,
  WindSDKSKAdNetwork_FieldNumber_Timestamp = 7,
  WindSDKSKAdNetwork_FieldNumber_Sign = 8,
  WindSDKSKAdNetwork_FieldNumber_FidelityType = 9,
};

WindGPB_FINAL @interface WindSDKSKAdNetwork : WindGPBMessage

/** 广告网络的版本1.0 or 2.0 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *version;

/** 广告网络的id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *adNetworkId;

/** 广告网络确定其自己的广告系列标识符，该标识符必须为1到100之间的整数 */
@property(nonatomic, readwrite) int32_t campaignId;

/** 广告主媒体的iTunes ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *itunesId;

/** 媒体的itunes id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sourceAppId;

/** 唯一曝光id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nonce;

/** 时间戳 (ms) */
@property(nonatomic, readwrite) uint64_t timestamp;

/** 广告网络创建用于签名广告的加密签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;

/** 2.2版本及更高版本的签名所需。对于view-through广告fidelity_type=0；storekit类型广告fidelity_type=1 */
@property(nonatomic, readwrite) uint32_t fidelityType;

@end

#pragma mark - WindSDKResponseNativeAd

typedef WindGPB_ENUM(WindSDKResponseNativeAd_FieldNumber) {
  WindSDKResponseNativeAd_FieldNumber_AssetsArray = 1,
  WindSDKResponseNativeAd_FieldNumber_Type = 2,
};

WindGPB_FINAL @interface WindSDKResponseNativeAd : WindGPBMessage

/** native 对象不为空则必填，元素对象 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<WindSDKResponseAsset*> *assetsArray;
/** The number of items in @c assetsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger assetsArray_Count;

/** 1: 单视频、2: 单图、3: 多图(指3张图片) */
@property(nonatomic, readwrite) uint32_t type;

@end

#pragma mark - WindSDKResponseAsset

typedef WindGPB_ENUM(WindSDKResponseAsset_FieldNumber) {
  WindSDKResponseAsset_FieldNumber_Index = 1,
  WindSDKResponseAsset_FieldNumber_Video = 2,
  WindSDKResponseAsset_FieldNumber_Image = 3,
  WindSDKResponseAsset_FieldNumber_Text = 4,
};

WindGPB_FINAL @interface WindSDKResponseAsset : WindGPBMessage

/** 原生元素id，通常从0开始递增 */
@property(nonatomic, readwrite) uint32_t index;

/** 视频元素 */
@property(nonatomic, readwrite, strong, null_resettable) WindSDKResponseAssetVideo *video;
/** Test to see if @c video has been set. */
@property(nonatomic, readwrite) BOOL hasVideo;

/** 图片元素 */
@property(nonatomic, readwrite, strong, null_resettable) WindSDKResponseAssetImage *image;
/** Test to see if @c image has been set. */
@property(nonatomic, readwrite) BOOL hasImage;

/** 文字元素 */
@property(nonatomic, readwrite, strong, null_resettable) WindSDKResponseAssetText *text;
/** Test to see if @c text has been set. */
@property(nonatomic, readwrite) BOOL hasText;

@end

#pragma mark - WindSDKResponseAssetVideo

typedef WindGPB_ENUM(WindSDKResponseAssetVideo_FieldNumber) {
  WindSDKResponseAssetVideo_FieldNumber_URL = 1,
  WindSDKResponseAssetVideo_FieldNumber_W = 2,
  WindSDKResponseAssetVideo_FieldNumber_H = 3,
  WindSDKResponseAssetVideo_FieldNumber_Duration = 4,
};

WindGPB_FINAL @interface WindSDKResponseAssetVideo : WindGPBMessage

/** 视频url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** 视频素材宽度，原生广告，该字段必填 */
@property(nonatomic, readwrite) uint32_t w;

/** 视频素材高度，原生广告，该字段必填 */
@property(nonatomic, readwrite) uint32_t h;

/** 视频时长 */
@property(nonatomic, readwrite) uint32_t duration;

@end

#pragma mark - WindSDKResponseAssetImage

typedef WindGPB_ENUM(WindSDKResponseAssetImage_FieldNumber) {
  WindSDKResponseAssetImage_FieldNumber_URL = 1,
  WindSDKResponseAssetImage_FieldNumber_W = 2,
  WindSDKResponseAssetImage_FieldNumber_H = 3,
};

WindGPB_FINAL @interface WindSDKResponseAssetImage : WindGPBMessage

/** 图片url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** 原生广告位宽度，原生对象下必填 */
@property(nonatomic, readwrite) uint32_t w;

/** 原生广告位高度；原生对象下必填 */
@property(nonatomic, readwrite) uint32_t h;

@end

#pragma mark - WindSDKResponseAssetText

typedef WindGPB_ENUM(WindSDKResponseAssetText_FieldNumber) {
  WindSDKResponseAssetText_FieldNumber_Context = 1,
};

WindGPB_FINAL @interface WindSDKResponseAssetText : WindGPBMessage

/** text文字内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *context;

@end

#pragma mark - WindSDKTemplate

typedef WindGPB_ENUM(WindSDKTemplate_FieldNumber) {
  WindSDKTemplate_FieldNumber_Type = 1,
  WindSDKTemplate_FieldNumber_Context = 2,
};

WindGPB_FINAL @interface WindSDKTemplate : WindGPBMessage

/** 1: 在线加载URL方式；2: html source方式；3: tgz压缩包，加载根目录endcard.html包方式 */
@property(nonatomic, readwrite) uint32_t type;

/** 中文需要UTF-8编码，存放对应的html内容或者URL */
@property(nonatomic, readwrite, copy, null_resettable) NSData *context;

@end

#pragma mark - WindSDKBiddingResponse

typedef WindGPB_ENUM(WindSDKBiddingResponse_FieldNumber) {
  WindSDKBiddingResponse_FieldNumber_WinURL = 1,
  WindSDKBiddingResponse_FieldNumber_LoseURL = 2,
  WindSDKBiddingResponse_FieldNumber_Ecpm = 3,
};

WindGPB_FINAL @interface WindSDKBiddingResponse : WindGPBMessage

/** 竞价成功url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *winURL;

/** 竞价失败url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *loseURL;

/** 出价 */
@property(nonatomic, readwrite) uint32_t ecpm;

@end

#pragma mark - WindSDKWXProgramRes

typedef WindGPB_ENUM(WindSDKWXProgramRes_FieldNumber) {
  WindSDKWXProgramRes_FieldNumber_WxAppId = 1,
  WindSDKWXProgramRes_FieldNumber_WxUniversalLink = 2,
  WindSDKWXProgramRes_FieldNumber_WxAppUsername = 3,
  WindSDKWXProgramRes_FieldNumber_WxAppPath = 4,
};

WindGPB_FINAL @interface WindSDKWXProgramRes : WindGPBMessage

/** 微信开放平台媒体id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *wxAppId;

/** 微信开放平台媒体UniversalLink（仅iOS需要） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *wxUniversalLink;

/** 小程序原始id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *wxAppUsername;

/** 拉起小程序页面的可带参路径 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *wxAppPath;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
